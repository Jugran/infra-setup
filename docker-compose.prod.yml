version: "3.9"

services:
  webserver:
    container_name: webserver
    image: nginx:stable-alpine
    restart: always

    ports:
      - 80:80
    
    networks:
      - api-webserver
    
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    
  users: &api
    container_name: users
    image: node-alpine
    restart: always
    build:
      context: .
      args:
        - target=user
        - NODE_ENV=production

    env_file: ./.env

    networks:
      - api-db
      - api-webserver
    depends_on:
      - postgres

    volumes:
      - ./user:/home/node/code

    entrypoint: sh -c "./startup-check.sh && npm run start"

  orders:
    <<: *api
    container_name: orders
    build:
      context: .
      args:
        - target=orders
        - NODE_ENV=production

    volumes:
      - ./orders:/home/node/code

  products:
    <<: *api
    container_name: products
    build:
      context: .
      args:
        - target=products
        - NODE_ENV=production

    volumes:
      - ./products:/home/node/code

  postgres:
    container_name: postgres
    restart: always
    image: postgres:16-alpine

    environment:
      POSTGRES_PASSWORD: ${PASSWORD}

    networks:
      - api-db

networks:
  api-db:
  api-webserver:
